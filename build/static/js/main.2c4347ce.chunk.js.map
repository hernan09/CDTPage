{"version":3,"sources":["components/news/News.js","components/nav/Nav.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["News","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","news","show","hide","mostrar","bind","assertThisInitialized","_this2","fetch","then","resp","json","result","setState","map","n","fecha2","date","split","slice","react_default","a","createElement","key","id","className","title","autor","source","style","height","width","margin","display","src","img","alt","body","opacity","marginTop","marginBottom","type","onClick","href","position","left","Component","Nav","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","App","nav_Nav","news_News","footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c4347ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './news.css';\r\n\r\n\r\nclass News extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      news: [],\r\n      show: false,\r\n      hide: true\r\n    };\r\n    this.mostrar = this.mostrar.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://cdtbackend.herokuapp.com/news?page=1&limit=3').then(resp => resp.json()).then((result) => {\r\n      this.setState({\r\n        news: result.news\r\n      });\r\n    });\r\n  }\r\n\r\n  mostrar() {\r\n    this.setState({\r\n      show: !this.state.show,\r\n      hide: !this.state.hide\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const news = this.state.news.map((n) => {\r\n      const fecha = n.date.split('');\r\n      const fecha2 = fecha.slice(0, 10);\r\n      return (\r\n        <div key={n.id} id=\"noticias\">\r\n          <div className=\"card mb-3\">\r\n            <h3 className=\"card-header\">{n.title}</h3>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{n.autor}</h5>\r\n              <h6 className=\"card-subtitle text-muted\">{n.source}</h6>\r\n            </div>\r\n            <img\r\n              id='imgen'\r\n              style={{\r\n                height: 200, width: '60%', margin: 'auto', display: 'block'\r\n              }}\r\n              src={n.img}\r\n              alt=\"Card\"\r\n            />\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">{n.body}</p>\r\n            </div>\r\n            <ul className=\"list-group list-group-flush\">\r\n              <li className=\"list-group-item\">{fecha2}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div id=\"contenedor\">\r\n        {this.state.hide && (\r\n        <blockquote id='blockCont' className=\"blockquote text-center\">\r\n          <div style={{ opacity: 0.5, marginTop: '50%', marginBottom: '50%' }} className=\"jumbotron\">\r\n            <h1 style={{ opacity: 1 }} className=\"display-3\">Good Morning!</h1>\r\n            <p className=\"lead\">Its time to start it will be an incredible day.</p>\r\n            <hr className=\"my-4\" />\r\n            <p className=\"lead\">\r\n              <button type=\"button\" style={{ width: 100 }} onClick={this.mostrar} className=\"btn btn-warning btn-lg\">News</button>\r\n            </p>\r\n          </div>\r\n        </blockquote>\r\n        )}\r\n\r\n        {this.state.show && (\r\n        <div>\r\n          {news}\r\n          <a\r\n            id='btnBack'\r\n            href='#top'\r\n            style={{\r\n              width: 300, position: 'relative', left: '31%', marginTop: '15%',\r\n              opacity: 0.7\r\n            }}\r\n            onClick={this.mostrar}\r\n            className=\"btn btn-warning btn-lg\">Back</a>\r\n        </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default News;\r\n","import React, { Component } from 'react';\r\nimport './nav.css';\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <nav style={{ opacity: 0.7 }} className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#top\">Home</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#top\">Features</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#top\">Pricing</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#top\">About</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\n\r\nimport './foter.css';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div id='foter'>\r\n        <ul>\r\n          <li><a href=\"top\"><span className=\"icon-facebook\" /> Facebook</a></li>\r\n          <li><a href=\"top\"><span className=\"icon-instagram\" /> Instagram</a></li>\r\n          <li><a href=\"top\"><span className=\"icon-twitter\" /> Twiter</a></li>\r\n          <li><a href=\"top\"><span className=\"icon-linkedin\" /> Linkeding</a></li>\r\n          <li><a href=\"top\"><span className=\"icon-github\" /> GitHub</a></li>\r\n        </ul>\r\n        <blockquote style={{ marginTop: 100 }} className=\"blockquote text-center\">\r\n          <footer className=\"blockquote-footer\">Amazing <cite title=\"Source Title\">Sunrise</cite></footer>\r\n        </blockquote>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport News from './components/news/News';\nimport Nav from './components/nav/Nav';\nimport Footer from './components/footer/Footer';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <News />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}